package {{GroupId:SNAKE}}.{{ArtifactId:SNAKE}}.core.use_cases.{{UseCaseName:SNAKE}}.implementations

import {{GroupId:SNAKE}}.{{ArtifactId:SNAKE}}.core.use_cases.{{UseCaseName:SNAKE}}.{{UseCaseName:PASCAL}}UseCase
import {{GroupId:SNAKE}}.{{ArtifactId:SNAKE}}.core.use_cases.{{UseCaseName:SNAKE}}.io.inputs.{{UseCaseName:PASCAL}}UseCaseInput
import {{GroupId:SNAKE}}.{{ArtifactId:SNAKE}}.core.use_cases.{{UseCaseName:SNAKE}}.io.outputs.{{UseCaseName:PASCAL}}UseCaseOutput
import com.cae.use_cases.contexts.ExecutionContext

/**
 * This class implements the {{UseCaseName:PASCAL}}UseCase, containing all the internal logic for its operation.
 * Since it is a FunctionUseCase, its purpose is to supply something, based on its input.
 * <p>
 * Important: Avoid hardcoding any sensitive information in this code. The auto-documentation
 * process will analyze this section of the source code if the GPT mode is enabled.
 */
class {{UseCaseName:PASCAL}}UseCaseImplementation: {{UseCaseName:PASCAL}}UseCase() {

    override fun applyInternalLogic(
             input: {{UseCaseName:PASCAL}}UseCaseInput?,
             context: ExecutionContext?): {{UseCaseName:PASCAL}}UseCaseOutput? {
        //the workflow of the {{UseCaseName:PASCAL}}UseCase is supposed to be implemented here. Let's go!
        return null
    }
}
