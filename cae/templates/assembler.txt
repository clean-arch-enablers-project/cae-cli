package <pk><group_id></group_id>.<artifact_id_sem_core></artifact_id_sem_core></pk>.assemblers.use_cases.<sc>args[0]</sc>;

import com.cae.use_cases.assemblers.UseCaseAssembler;
import <pk><group_id></group_id>.<artifact_id></artifact_id></pk>.core.use_cases.<sc>args[0]</sc>.<pc>args[0]</pc>UseCase;
import <pk><group_id></group_id>.<artifact_id></artifact_id></pk>.core.use_cases.<sc>args[0]</sc>.implementations.<pc>args[0]</pc>UseCaseImplementation;
import lombok.AccessLevel;
import lombok.NoArgsConstructor;

@NoArgsConstructor(access = AccessLevel.PRIVATE)
public class <pc>args[0]</pc>UseCaseAssembler implements UseCaseAssembler<<pc>args[0]</pc>UseCase>{

    public static final <pc>args[0]</pc>UseCaseAssembler SINGLETON_ASSEMBLER = new <pc>args[0]</pc>UseCaseAssembler();

    public static final <pc>args[0]</pc>UseCase V1 = new <pc>args[0]</pc>UseCaseImplementation();

    @Override
    public <pc>args[0]</pc>UseCase getDefaultAssembledInstance(){
        return V1;
    }
}